name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ main ] # mainブランチにpushされたら実行
  workflow_dispatch: # 手動実行も可能にする

env:
  # --- Google Cloud 設定 (必ず自分の値に置き換える) ---
  PROJECT_ID: my-secure-streamlit-app # GCPプロジェクトID
  PROJECT_NUMBER: your-gcp-project-number # ★★★ GCPプロジェクト番号に置き換え ★★★
  GAR_LOCATION: asia-northeast1 # Artifact Registry のリージョン
  REPOSITORY: my-streamlit-images # Artifact Registry のリポジトリ名
  SERVICE_NAME: my-secure-streamlit-app # Cloud Run のサービス名
  REGION: asia-northeast1 # Cloud Run のリージョン

  # --- サービスアカウント (メールアドレス) ---
  # ★★★ YOUR_PROJECT_ID を実際のプロジェクトID (my-secure-streamlit-app) に置き換え ★★★
  APP_SA_EMAIL: my-streamlit-app-runner@my-secure-streamlit-app.iam.gserviceaccount.com # App用SA
  DEPLOY_SA_EMAIL: github-actions-deployer@my-secure-streamlit-app.iam.gserviceaccount.com # Deploy用SA

  # --- Workload Identity Federation ---
  WIF_POOL_ID: github-pool # 作成したWIFプールID
  WIF_PROVIDER_ID: github-provider # 作成したWIFプロバイダID
  # WIFプロバイダのフルパス (PROJECT_NUMBER を上で正しく設定すること)
  WIF_PROVIDER: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.WIF_POOL_ID }}/providers/${{ env.WIF_PROVIDER_ID }}

  # --- Secret Manager ---
  SECRET_ID: my-app-api-key # アプリが使用するSecretの名前
  # アプリがSecret IDを知るための環境変数名 (main.py で os.getenv するキー)
  SECRET_ID_ENV_VAR_NAME: MY_APP_API_KEY_SECRET_ID
  # Secretの値をマウントする先の環境変数名（今回は使わないが例として）
  # SECRET_VALUE_ENV_VAR_NAME: MY_APP_API_KEY_VALUE

jobs:
  build-and-deploy: # インデントレベル 0
    name: Build and Deploy # インデントレベル 1 (スペース 2)
    runs-on: ubuntu-latest # インデントレベル 1

    permissions: # インデントレベル 1
      contents: 'read' # インデントレベル 2 (スペース 4)
      id-token: 'write' # インデントレベル 2

    steps: # インデントレベル 1
    - name: Checkout code # インデントレベル 2 (スペース 4) - ステップ定義
      uses: actions/checkout@v4 # インデントレベル 3 (スペース 6)

    - name: Authenticate to Google Cloud # インデントレベル 2
      id: auth
      uses: google-github-actions/auth@v2 # インデントレベル 3
      with: # インデントレベル 3
        workload_identity_provider: ${{ env.WIF_PROVIDER }} # インデントレベル 4 (スペース 8)
        service_account: ${{ env.DEPLOY_SA_EMAIL }} # インデントレベル 4

    - name: Set up Cloud SDK # インデントレベル 2
      uses: google-github-actions/setup-gcloud@v2 # インデントレベル 3
      with: # インデントレベル 3
        project_id: ${{ env.PROJECT_ID }} # インデントレベル 4

    - name: Configure Docker # インデントレベル 2
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet # インデントレベル 3

    - name: Build Docker image # インデントレベル 2
      run: docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }} . # インデントレベル 3

    - name: Push Docker image # インデントレベル 2
      run: docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }} # インデントレベル 3

    # Cloud Run へのデプロイ
    - name: Deploy to Cloud Run # インデントレベル 2
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2 # インデントレベル 3
      with: # インデントレベル 3
        service: ${{ env.SERVICE_NAME }} # インデントレベル 4
        region: ${{ env.REGION }} # インデントレベル 4
        image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }} # インデントレベル 4
        service_account: ${{ env.APP_SA_EMAIL }} # インデントレベル 4

        # --- ↓↓↓ Secret Manager と環境変数の設定 ↓↓↓ ---
        # secrets: | # インデントレベル 4
        #   # この下の行はレベル 5 (スペース 10)
        #   ${{ env.SECRET_VALUE_ENV_VAR_NAME }}=${{ env.SECRET_ID }}:latest

        env_vars: | # インデントレベル 4
          # この下の行はレベル 5 (スペース 10)
          ${{ env.SECRET_ID_ENV_VAR_NAME }}=${{ env.SECRET_ID }}
          # この行もレベル 5
          # GCP_PROJECT=${{ env.PROJECT_ID }}
        # --- ↑↑↑ 設定追加ここまで ↑↑↑ ---

        # flags: '--allow-unauthenticated' # インデントレベル 4

    # デプロイされたURLを出力
    - name: Show Deployed URL # インデントレベル 2 (前のステップと同じレベル)
      run: echo "Deployed URL: ${{ steps.deploy.outputs.url }}" # インデントレベル 3
